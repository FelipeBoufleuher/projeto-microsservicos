version: '3.8'

services:

  sala-db:
    image: mysql:latest
    container_name: sala-db
    ports:
      - "3233:3306"
    environment:
      - MYSQL_USER=admin
      - MYSQL_PASSWORD=123
      - MYSQL_DATABASE=db_sala
      - MYSQL_ROOT_PASSWORD=123
    volumes:
      - sala-db-data:/var/lib/mysql
    networks:
      - net2

  reserva-db:
    image: mysql:latest
    container_name: reserva-db
    ports:
      - "3234:3306"
    environment:
      - MYSQL_USER=admin
      - MYSQL_PASSWORD=123
      - MYSQL_DATABASE=db_reserva
      - MYSQL_ROOT_PASSWORD=123
    volumes:
      - reserva-db-data:/var/lib/mysql
    networks:
      - net3

  user-db:
    image: mysql:latest
    container_name: user-db
    ports:
      - "3232:3306"
    environment:
      - MYSQL_USER=admin
      - MYSQL_PASSWORD=123
      - MYSQL_DATABASE=db_usuario
      - MYSQL_ROOT_PASSWORD=123
    volumes:
      - user-db-data:/var/lib/mysql
    networks:
      - net1

  user-micro:
    build:
      context: ./user-micro
      dockerfile: Dockerfile
    container_name: user-micro
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://user-db:3306/db_usuario
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: 123
    depends_on:
      - user-db
    restart: always
    networks:
      - net1

  reserva-micro:
    build:
      context: ./reserva-micro
      dockerfile: Dockerfile
    container_name: reserva-micro
    ports:
      - "8082:8082"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://reserva-db:3306/db_reserva
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: 123
    depends_on:
      - reserva-db
    restart: always
    networks:
      - net3

  sala-micro:
    build:
      context: ./sala-micro
      dockerfile: Dockerfile
    container_name: sala-micro
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://sala-db:3306/db_sala
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: 123
    depends_on:
      - sala-db
    restart: always
    networks:
      - net2

  front:
    build:
      context: ./front
      dockerfile: Dockerfile
    container_name: front
    ports:
      - "3000:3000"
    depends_on:
      - user-micro
      - sala-micro
      - reserva-micro
    networks:
      - net1
      - net2
      - net3
    restart: always

  nginx:
    image: nginx:latest
    container_name: nginx-gateway
    command: /bin/bash -c "sleep 10 && nginx -g 'daemon off;'"
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - user-micro
      - sala-micro
      - reserva-micro
      - front
    networks:
      - net1
      - net2
      - net3
    restart: always
    
  rabbitmq:
    image: rabbitmq:3.7.8-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: "admin"
      RABBITMQ_DEFAULT_PASS: "admin"
    networks:
      - net1
      - net2
      - net3
  
  adminer:
    image: adminer
    ports:
      - "4040:8080"
    networks:
      - net1
      - net2
      - net3

volumes:
  user-db-data:
  sala-db-data:
  reserva-db-data:

networks:
  net1:
  net2:
  net3: